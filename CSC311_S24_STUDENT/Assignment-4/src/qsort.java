

import java.io.File;
import java.util.Random;

public class qsort {

	static int fileS = 0;
	//static File f = new File ("C:\\Users\\kathi\\OneDrive\\Documentos\\50 sets\\dos.txt");
	static int [] arr1 = {1183,355,2428,1920,2722,1874,1440,1809,2589,2250,2351,2699,173,1290,678,1689,296,2633,316,14,468,2079,1185,2118,1514,272,585,2067,1778,1633,999,1018,1098,2424,2154,2207,2849,576,203,1728,2696,1341,631,2012,1862,1508,1032,2071,1935,465,2,1984,450,734,2531,1777,2979,798,286,1528,987,1887,2402,68,2514,926,1886,30,1835,813,2683,2009,1157,2493,2788,883,1601,2725,994,1195,1688,247,1081,2677,1410,710,344,1294,1702,1,2883,346,2586,2093,2930,601,2494,942,1790,364,1226,1672,1945,641,223,877,2257,1944,1281,1793,1263,83,2074,1498,2452,2336,181,2697,642,2636,939,653,396,643,300,2135,1566,1942,1178,332,1826,2970,1694,1502,2882,2677,1012,1884,2023,219,49,111,2069,1074,1632,1226,1870,2444,2889,328,101,1998,2613,1864,531,1166,1500,1914,634,1521,583,1327,652,1165,155,2848,2139,359,543,1290,713,575,1893,1115,1211,2625,1649,2667,1563,431,2871,1117,194,512,1869,2642,1125,10,2460,97,670,419,436,2446,1158,2924,71,828,2811,1330,2389,151,1388,1172,1210,2416,2320,240,288,2957,2609,2261,2086,2359,2167,2212,1861,1310,1684,1926,1497,2658,957,1894,2259,896,1487,1373,359,1914,2657,1918,1195,959,761,1977,2971,2790,1284,1449,1110,994,1027,344,2880,1872,48,1980,2721,755,2261,2969,525,765,1585,2933,766,1255,1415,2137,155,246,78,1487,1927,2708,334,1702,1122,480,637,1451,1060,2773,2182,2761,1586,2290,2913,2934,916,1819,835,494,2289,2491,2418,2630,2527,2246,2889,320,1354,198,1679,483,1088,1803,2503,2801,298,344,2063,2113,2089,2703,2370,600,1375,2085,296,2449,2255,742,1790,2841,2778,114,31,261,1917,2752,2207,657,2761,2264,117,1512,769,783,219,1959,1891,2551,2489,1418,1267,341,1208,2347,2925,1452,1097,1196,1812,1773,1687,1333,252,1078,812,1424,1215,1113,947,1228,126,1786,2632,2276,101,1834,768,2108,702,1647,2568,2405,714,1148,1868,2683,1995,2626,742,1615,886,1209,219,736,2118,1437,1990,735,815,470,2883,1387,931,2340,397,2601,1319,1231,2094,324,1836,658,54,910,689,2261,261,2558,2181,49,2527,636,318,2908,469,1814,2815,2023,1046,258,1825,103,1200,2509,856,2940,1005,2368,2785,2118,2385,1246,6,2801,1235,1693,2955,557,96,1386,1390,2933,1082,2537,1803,297,369,2832,2117,1763,388,602,1909,1212,2734,837,2961,965,2861,924,1258,2360,935,960,749,896,2647,2752,2353,2346,88,2263,630,1717,137,2938,1237,890,1648,1411,1036,1419,2800,1445,2960,239,2342,390,917,2218,2704,365,1867,1060,2444,2732,2833,647,2037,136,765,2143,1808,2439,2411,797,1044,1457,283,2815,2867,2011,1651,2497,2954,604,1923,2464,1925,1200,2615,541,2062,1620,2661,652,2536,71,2292,83,2171,969,2146,1408,1005,2558,1200,888,1629,1526,127,823,395,300,2976,220,244,722,2494,631,1399,84,497,2680,2031,2437,1672,2151,649,720,1362,609,310,1253,889,2489,2510,102,1697,1523,750,2402,1634,1203,2259,2769,1557,2401,22,552,1,88,1638,2692,1503,819,2672,1301,1140,2983,2997,1084,2883,579,2077,527,778,1758,846,2187,1505,1901,2049,550,2162,1876,1147,153,2087,2812,918,1983,958,1709,1336,136,1493,2069,1761,501,962,644,2397,2167,497,1420,2011,1414,1204,1256,981,2926,2172,2346,224,176,508,229,2029,2031,1476,2932,1378,992,2243,1735,1059,201,2367,697,2723,2871,2645,2697,1166,2775,144,2268,2266,1185,355,2870,1348,761,1683,2984,325,1532,1495,1548,75,140,479,2050,2494,533,2772,2570,1450,181,2067,912,574,217,35,662,925,1914,1083,2278,321,587,2615,1195,1760,2029,1049,1225,2316,1501,1321,642,380,2917,1880,1871,1616,2667,2944,1540,2023,2575,1546,1049,1550,2403,1794,69,2576,587,2921,2899,2824,508,2602,484,178,1525,1293,613,1056,2511,640,1175,1367,2043,2075,626,1153,968,64,2228,976,267,452,1950,295,2832,663,1918,872,2512,1774,1671,2298,795,719,12,858,2999,2874,2627,2316,1884,1823,941,1741,2108,1072,1568,1619,1503,184,1357,2768,2280,3000,1494,1976,1802,1460,1152,398,1434,1875,876,167,1574,522,1874,809,1560,340,1205,1379,2114,1564,1521,554,710,2978,2347,1534,2313,333,1684,254,863,1669,84,1039,1479,460,932,2993,960,469,2324,1614,1669,2624,2956,2718,1362,995,1379,138,947,2629,655,975,1102,2069,2516,707,1090,122,2464,1411,1711,195,1535,1479,2465,1907,1116,2065,331,2925,595,508,2806,2656,2509,2194,1846,2619,1046,22,933,426,2063,1327,1900,583,2160,1895,2155,1760,2013,1737,2240,1375,2528,1886,2071,1254,1400,2720,2086,561,915,1004,2010,574,1731,129,1875,2155,2728,114,879,1405,2331,653,553,2424,551,452,2319,171,2729,1455,2174,2184,2258,2858,1184,1528,1528,2946,2704,2475,2533,25,597,1969,2682,1099,700,2354,104,541,163,2759,2473,383,353,1834,714,836,2902,1490,2442,75,2912,1591,2071,723,966,974,749,863,1123,66,2488,8,1248,1843,2832,2597,925,2439,304,2089,87,2504,883,898,263,437,944,877,2845,2032,1760,2020,1910,1298,1419,2577,949,1271,760,2570,1900,2417,1919,1244,2758,2077,2065,2352,1100,2077,1350,2866,725,2384,1770,638,252,1594,103,1017,2666,595,1473,1442,2070,2924,2584,1098,1992,2814,988,1978,2259,1894,1463,2799,241,688,2629,919,1193,170,2565,2715,1312,428,2422,2421,1030,2125,2416,807,2081,138,2766,2791,2263,695,1993,150,795,2170,2968,2960,925,891,66,1981,606,2338,1661,2843,1214,2533,532,1823,2083,776,928,2603,1515,1151,2257,2186,1487,837,1223,2685,803,522,1361,1166,926,1799,177,204,1342,2116,2656,717,705,1343,1373,1170,2939,1310,858,1732,61,2253,2837,1187,2216,2135,630,816,1708,174,1518,421,851,1398,2190,1165,732,2287,1099,2347,2224,81,1279,2479,2443,2299,1634,924,2461,1224,537,61,1162,476,1145,536,1167,927,2308,2935,2515,2560,2725,2754,2770,1369,1035,1557,2240,1770,1900,2629,889,2369,2147,2179,2477,1130,1938,1624,168,1252,2570,2209,2632,2954,839,263,1226,2105,281,191,553,23,1187,913,1917,462,2678,2149,487,1956,465,2092,342,2999,2299,1049,2594,1948,1757,750,1793,1222,143,1671,2309,1982,2436,2750,2468,2323,834,2585,1776,2177,2938,253,2,783,1159,1878,2781,120,1101,278,2633,127,1093,2547,1187,2966,60,2315,2675,1890,975,819,2762,1264,2887,1067,1777,288,2641,214,826,690,1148,2161,2896,1018,1223,2892,1444,1081,148,74,2679,106,1754,2909,2286,126,285,483,669,1328,1783,2965,176,1760,2897,349,1973,27,1653,499,2484,1750,1855,2290,1311,1437,2723,370,2202,1139,235,2451,1533,2513,766,1821,1800,339,260,1715,718,647,252,220,785,5,2622,2210,2762,2318,1973,1402,829,548,905,450,679,2363,2096,4,1617,458,1074,365,1241,2352,1400,2921,2672,2603,1445,528,1826,2165,2800,2755,2908,2720,1684,2891,679,314,1420,198,251,1262,1268,2389,87,1157,550,2360,1479,1583,2909,1176,2118,2715,2313,394,1273,2474,1546,1902,941,2697,170,1249,842,1456,1463,2143,778,2682,2958,2020,2559,831,2207,1386,1697,2876,1678,2979,962,147,1449,508,828,2410,2695,2461,1459,2083,1929,151,2710,1829,2112,2795,2931,2854,1057,2365,1718,1253,2585,423,9,2905,753,1805,1309,1646,2205,1624,173,51,971,1526,1564,2496,1793,1424,460,959,2465,2295,1016,1393,2521,2351,432,1169,2405,1364,487,1881,2022,1935,413,1175,2930,1411,300,907,1387,1498,709,604,713,172,2506,2020,405,857,1941,2553,2586,2419,370,937,2307,2488,2177,630,2477,257,572,215,1534,2301,2999,1487,1479,1617,614,190,531,1691,347,1227,1149,552,1846,1875,1562,1838,161,2702,1189,736,1231,2490,1249,2650,2356,764,94,355,419,467,2204,558,2222,1229,2914,2591,1573,830,544,647,1864,2583,699,1210,2733,1412,923,1448,815,105,1202,804,2694,2910,2494,2363,2084,1408,2372,887,497,2482,1077,1352,1713,1149,54,1432,2816,2776,1914,834,2123,1186,2948,2911,2050,1049,2268,1983,2068,811,774,1106,39,2522,28,278,980,1276,664,783,350,1882,962,1575,2370,1549,124,2697,712,2141,768,527,2068,2777,156,2871,157,1008,2937,2290,1884,1769,2750,1183,46,2763,2707,642,1799,2341,473,984,2954,20,836,2685,2585,92,388,1413,2788,316,2253,843,2368,283,847,941,528,1612,1585,1340,993,2634,2509,2998,1261,141,857,1765,915,2129,2687,1353,1698,642,206,1182,2059,2582,1382,2038,1061,1582,381,2929,2960,2190,1585,788,2230,924,1145,197,1750,2963,1014,1709,697,2463,1546,702,1296,2034,946,1382,368,1099,2249,672,2721,802,825,2318,2049,2289,2857,1508,1479,606,509,775,1451,2449,433,1600,1073,915,2487,1065,856,890,1145,388,2751,1509,1273,1467,2720,2152,2816,542,776,2641,449,100,1524,471,1207,2043,626,552,267,1665,1738,546,896,544,2141,2732,489,947,2922,1722,1260,2268,2950,71,2955,275,168,2408,2285,243,1865,1793,580,2782,1783,870,264,2279,1783,2517,346,946,2231,2658,787,1832,2201,246,1406,2472,1755,2904,2245,735,1942,768,2494,2906,1694,2402,2385,2930,129,737,2996,1752,2347,2397,1827,2424,48,1395,383,1592,1032,2485,2483,550,2028,812,2256,2789,1492,1819,2345,1288,1189,330,1183,1114,759,1339,2227,721,1879,133,1134,2159,2169,2121,551,2556,1123,1609,1634,1910,119,1775,2624,286,45,1793,690,685,1859,754,143,1,1951,1879,241,2393,2114,655,1856,2599,2883,366,2794,1179,1855,2471,2803,2084,1414,1575,1183,2886,1639,2753,1749,624,603,1170,1394,1264,2792,2223,418,2870,1780,719,730,2208,661,600,445,2276,1565,2567,93,2868,1338,1108,261,1644,1976,1197,1151,1705,1188,2505,1617,2586,112,1826,2275,2358,1353,550,777,28,2416,1110,1689,2224,2739,1540,1598,827,1617,1368,1032,1555,631,2149,276,1011,2127,1995,1328,1271,1898,1547,2575,1526,2588,2324,1231,2100,946,55,2323,2280,2685,1089,1291,1373,1715,1109,1305,2653,753,1660,2774,319,1986,564,688,2334,1791,604,993,887,298,1263,877,734,927,986,2452,1539,1017,1079,1274,929,540,1585,1371,1107,499,808,1588,784,2050,991,1054,77,2914,1740,1440,685,1498,68,2365,2493,292,1102,2134,1368,1661,1367,403,840,349,330,1627,98,1885,1397,2146,98,261,2710,1521,2764,2398,1905,2414,249,1785,341,273,450,1219,622,1038,1894,2449,1188,2890,988,2384,217,72,1463,2313,1977,266,2504,2883,1949,1559,548,2469,1038,2161,1230,258,2044,1311,659,1607,1247,242,716,117,2771,2374,2111,888,447,1670,2407,1154,2122,1696,2341,1444,1769,330,2571,592,2744,2686,424,848,635,2031,389,917,880,2160,1749,708,641,72,1776,1622,2556,1351,2250,1432,1060,2856,911,115,1631,2338,580,2853,769,425,762,2120,945,2645,2620,2442,1047,488,1495,2468,942,400,2402,1094,2783,1409,2273,167,2903,2110,58,1558,680,2572,2476,1685,2425,2557,1286,1748,1777,125,2261,2992,1805,648,2913,1968,2992,2148,1273,593,1937,2817,1406,553,1140,2653,1047,78,348,1192,651,1440,1926,1826,308,2974,2038,521,1171,28,2967,1189,126,238,2429,462,2484,2760,1461,463,2850,2803,2247,266,196,661,372,2812,846,1610,2810,582,1870,426,1951,2763,80,431,805,132,1399,503,187,2334,2567,2529,676,701,1932,2695,2459,299,1930,1671,241,1745,1451,823,73,2547,71,2361,1815,866,1243,624,2102,2128,1221,575,1907,819,1484,1313,14,1560,2368,2018,384,426,2496,1771,541,1832,393,644,2625,170,102,915,1710,1262,396,2626,1872,2977,1601,1149,1163,2778,94,319,1298,2178,2615,1398,2809,68,464,1939,58,1918,2514,1991,2929,1011,296,2045,1811,1054,2417,1025,829,1236,914,2113,2499,2600,2824,232,1723,2810,75,1519,1447,2058,486,1947,2998,1490,2506,2901,2160,2041,885,2589,2440,2518,1478,530,1009,1477,756,1176,1318,543,2487,1386,1149,462,1727,2409,1588,2065,2360,2557,474,45,1581,958,1686,1780,1925,2265,498,1524,2271,2326,2170,428,1819,1928,2809,1286,1399,1248,1931,952,1269,2854,688,2744,1187,277,1245,1490,2980,1367,735,2542,1443,1646,2796,1289,2035,998,2645,1279,1028,1671,2004,2784,960,37,1789,113,1780,165,2405,1916,1853,735,472,512,2384,1464,492,2597,21,1935,2838,977,968,2189,412,2139,9,2013,1813,73,723,470,588,2720,2144,2730,1719,257,2913,992,149,2804,568,2485,104,2904,97,274,702,1329,2885,1555,1327,2387,1038,2449,1298,2780,1322,2573,300,396,2239,2135,2801,755,2134,324,1992,1835,343,524,309,1796,2810,2829,636,2634,1949,2675,1940,910,2551,2711,298,2595,981,361,109,365,500,1009,774,513,2837,2187,1081,86,1122,1954,55,2076,2612,905,1360,2880,407,2905,1845,1930,1738,682,2731,2885,2018,566,2520,2688,631,1129,1030,2946,2319,977,2512,869,300,1562,1480,1721,1684,833,1991,246,2471,210,1070,2859,1820,2965,1515,388,2113,2926,2149,400,2462,1566,564,33,1765,2052,2145,834,1351,58,64,1481,397,958,2013,1415,2710,157,1063,1735,2945,2725,220,288,2389,2454,2574,1190,556,2220,1350,1110,1754,2809,230,1823,1939,924,2317,242,2680,1047,471,2855,1521,959,1956,2967,862,1061,1258,521,306,924,2968,2114,1231,1517,1078,2816,2197,1427,696,549,2895,2206,309,351,2835,1508,2624,1988,1030,1486,667,947,1682,1061,2696,2868,184,1431,1066,1975,827,2800,1199,1518,856,73,1101,371,1937,1193,92,794,1236,2819,1575,1041,1333,1657,2312,1548,9,59,1235,1929,2399,2872,2518,2414,2188,319,371,1583,1057,2217,1553,697,1975,667,264,774,986,262,1814,1117,2629,1319,1869,776,2481,1579,390,1393,2407,2917,1450,685,336,918,2094,1073,1689,1510,2795,2613,2139,1630,1123,2731,145,2170,2830,1290,2992,582,2123,2956,817,1132,1855,1155,2257,789,685,2518,2220,2582,67,62,2877,410,2667,587,825,710,49,1534,1854,1344,1190,1989,1763,2788,1375,1591,2701,1163,2182,322,2213,28,1946,276,389,1644,299,335,263,1744,1974,499,1694,1004,1804,1114,717,1190,411,18,2211,2800,158,2890,96,1843,433,2342,1145,1095,1310,341,1144,1799,193,1781,2667,1220,934,807,640,900,901,988,2563,2354,2967,2258,1370,1644,45,1786,974,1139,1842,2823,331,1757,1872,1948,2496,452,1983,2398,377,157,789,318,2272,13,2943,137,1352,453,777,2404,1558,1732,256,1674,1081,607,2890,1841,2037,2703,2365,2682,741,1620,1785,1929,2319,2718,530,1231,957,1315,1500,158,2515,747,420,2749,2477,2705,2131,1554,1518,1796,715,19,1150,2668,19,1897,870,2889,829,948,2362,1476,578,2998,2164,758,1008,43,2891,2451,1881,619,2901,2946,1858,2029,439,2070,1846,2335,1256,1418,78,1875,2993,1356,100,2013,2440,1344,782,491,538,1907,557,2436,2627,1633,2644,95,2652,670,1115,2017,2077,2047,942,270,2845,2993,1697,748,2345,1645,2781,1333,1877,704,205,1966,2788,286,214,1872,79,1851,352,1365,2020,2935,2819,2170,17,2267,1752,2648,1799,635,571,2409,1197,1265,196,2994,1607,2369,1329,1341,2820,907,2224,1243,2507,1073,2052,722,2973,2071,433,2322,760,2344,2259,2030,2036,138,1203,2729,1088,1922,1430,2998,718,1952,381,2546,2490,1165,1323,2224,1124,2260,2546,2140,2002,2282,1659,1288,1057,43,2097,1095,1017,621,999,2791,518,2134,350,102,172,304,1089,2719,2861,2255,2569,2592,618,2996,1419,1392,1013,2135,1250,1899,2977,2287,2989,2335,581,2147,615,2649,427,168,1250,67,1182,2197,2903,1118,865,2484,1026,1763,97,204,1383,2883,1865,2302,2789,2129,2859,1139,1246,1068,1109,2009,1998,965,1489,1510,2887,2836,318,2336,1659,1268,1771,798,127,672,2948,691,170,1115,589,668,1436,2439,1547,2171,1211,1825,1129,974,1960,2821,872,442,574,1639,491,2381,1664,555,807,2556,125,655,1833,2602,1794,1051,282,953,1621,2078,2159,552
};

    private  int [] array = new int [10];   // Initialize an array with 1000 x 1000 each time 
    int higherIndex;
   static int accu = 0;
   public void sort(int [] array_unsorted){
       if (array_unsorted == null || array_unsorted.length == 0){  // Make sure that array is not null
           return;
          }
       this.arr1 = array_unsorted;
       this.higherIndex = array_unsorted.length;
       getquicksort(0 , higherIndex-1);  // Calling Quicksort Algorithm
   }
   
   public void getquicksort(int lowerIndex, int higherIndex){
       
       int i = lowerIndex;
       int j = higherIndex;
       int pivot = arr1 [(lowerIndex + (higherIndex - lowerIndex)/2)];
       System.out.println("\n--------------------------------------------------------------------------------------");
       System.out.println(" \n Before loop LowerIndex is : " +lowerIndex +" HigherIndex is : " +higherIndex +" Pivot :" +pivot);
       
       while (i<=j){
           System.out.print("\n i is " +i + " j is " +j);
           while (arr1[i]<pivot){i++;}    // Check all the elements to pivot are lower
           while (arr1[j]>pivot){j--;}    // checking all the elements to pivot are higher
               if (i<=j){  // if (j > i) means all elements are already sorted
                    exchnage(i,j);
                       //System.out.print("\n i is " +i + " j is " +j);
                       i++;
                       j--;
               }
               
               System.out.print("\n");
               for (int a=0;a<arr1.length;a++){    // Printing array after each iteration -- Just Info
                   //System.out.print(" " +arr1[a] + " ");
               }
                       
       }
       
       // Calling QuickSort method recurssively
       
       if (lowerIndex<j){  
           getquicksort(lowerIndex,j);
           //System.out.print("\n");
          // System.out.println(" LowerIndex is : " +lowerIndex +"  J is " +j);
       }
  
       if (i < higherIndex){
           getquicksort(i,higherIndex);
           System.out.println(" higherIndex is : " +higherIndex +"  I is " +i);
       }
       
       System.out.println(" \n After the first iteration LowerIndex is : " +lowerIndex +" HigherIndex is : " +higherIndex +" Pivot :" +pivot);
       System.out.println(accu + " Cycles");
   }
   
   
    public void exchnage(int i , int j){   // Exchanging elements : Higher to the right and lower to the left
       int temp = arr1[i];
       arr1 [i] = arr1[j];
       arr1 [j] = temp;
       
       accu++;
   
       }
    
    
   public static void main(String[] args) {
       
       //int [] array = new int [10];    // Initialize an array with 10 elements
       //Random rm = new Random();   // Created object to create random number
       int random;
          /* for (int i = 0; i<array.length;i++){    // Added 10 random elements in the array
               random = rm.nextInt(50);
               array[i]= random;
           }*/
           
               System.out.print("###########################################");
               System.out.print("\n");
           for (int a : arr1){    // Printing Original Array
               // System.out.print(" " +a + " ");
           }
               System.out.print("\n ###########################################");
       
       qsort obj = new qsort();    // Creating an object for a class
       obj.sort(arr1);    //Calling Sorting Method
       
       
               
               System.out.print("###########################################");
               System.out.print("\n");
           for (int a : arr1){    // Printing Sorted Array
               //System.out.print(" " +a + " ");
           }
               System.out.print("\n ###########################################");
       
   }

}
